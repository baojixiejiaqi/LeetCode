/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode *getIntersectionNode(struct ListNode *headA, struct ListNode *headB) 
{
    struct ListNode*curA = headA;
    struct ListNode*curB = headB;
    int lenA = 0;
    int lenB = 0;
    while(curA->next)//记录两个链表的长度
    {
        ++lenA;
        curA=curA->next;
    }
    while(curB->next)
    {
        ++lenB;
        curB =curB->next;
    }
    int gap =abs(lenA-lenB);//gap来求出长度差
    struct ListNode* longlist = headA,*shortlist = headB;//默认a长b短
    if(lenB > lenA)//如果b长，重新赋予进去
    {
        longlist = headB;
        shortlist = headA;
    }
    while(gap--)//让长的先走长度差
    {
        longlist = longlist->next;
    }
    while(longlist != shortlist)//现在两个链表剩下的长度都一样，一起走，找到相同地址返回就行
    {
        longlist = longlist->next;
        shortlist = shortlist->next;
    }
    return longlist;
}
