/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
/**
 * Note: The returned array must be malloced, assume caller calls free().
 */

int TreeSize(struct TreeNode*  root)
{
    return root == NULL? 0:TreeSize(root->left) + TreeSize(root->right) + 1;//为空就 = 0 否则+1+左右
}
void PreOrder(struct TreeNode* root,int *a,int *pi)
{
    if(root == NULL)
    {
        return;
    }
    a[(*pi)++] = root->val;
    PreOrder(root->left,a,pi);
    PreOrder(root->right,a,pi);
}
int* preorderTraversal(struct TreeNode* root, int* returnSize)//不知道二叉树的大小
{
    *returnSize = TreeSize(root);//所以要查找数组的大小
    int *a = (int *)malloc(sizeof(int)*(*returnSize));//定义数组来存储排序好的二叉树
    int i = 0;
    PreOrder(root,a,&i);
    return a;
}
