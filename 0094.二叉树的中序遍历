/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */


/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int TreeSize(struct TreeNode*root)
{
    return root == NULL?0:TreeSize(root->left) + TreeSize(root->right) + 1;//为空就 = 0 否则+1+左右
}
void InOrder(struct TreeNode* root,int*a,int *pi)
{
    if(root == NULL)
    {
        return root;
    }
    InOrder(root->left,a,pi);
    a[(*pi)++] = root->val;
    InOrder(root->right,a,pi);
}
int* inorderTraversal(struct TreeNode* root, int* returnSize)
{
    *returnSize = TreeSize(root);//不知道二叉树的大小,所以要查找数组的大小
    int *a = (int*)malloc((*returnSize) * sizeof(int));//定义数组来存储排序好的二叉树
    int i = 0;
    InOrder(root,a,&i);
    return a;
}
