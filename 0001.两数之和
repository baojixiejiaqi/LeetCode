

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* twoSum(int* nums, int numsSize, int target, int* returnSize)
{
    for(int i = 0; i < numsSize;++i)//第一个数的范围：从第一个开始到数组倒数第二个数
     {
         for(int j=i+1; j <numsSize;++j)//第二个数范围：从第二个开始到数组最后一个数
         {
             if(nums[i] + nums[j] == target)//如果两个数加起来就是目标数的话就开始以下操作
             {
							 int * ret =malloc(sizeof(int) * 2);//创建动态内存，存储数组的两个下标
               ret[0] = i;//让第一个地址指向找到了的第一个数的下标
               ret[1] = j;//让第二个地址指向找到了的第二个数的下标
               *returnSize = 2;
//用来表示返回值的个数，这个方法的返回值是个指针，指向其实元素首地址，用returnSize记录返回值个数便于获取所有返回值
               return ret;//返回下标
             }
         }
     }
    *returnSize = 0;
    return NULL;
}
}

