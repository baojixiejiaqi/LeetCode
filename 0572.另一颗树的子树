/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
//思路：
//利用 isSameTree函数判断是否相等 
//利用 isSubtree判断是否为子树
bool isSameTree(struct TreeNode* p, struct TreeNode* q)
{
    if(p == NULL && q == NULL)
    {
        return true;
    }
    else if(p == NULL || q == NULL)
    {
        return false;
    }
    else if(p->val != q->val)
    {
        return false;
    }
    else
    {
        return isSameTree(p->left,q->left) && isSameTree(p->right,q->right); 
    }
}
//如果根节点为空 那就不要比了 返回false
//不为空 调用是否为子树函数去递归每一个子树
//当判断相等的函数 相等时 就返回true
bool isSubtree(struct TreeNode* root, struct TreeNode* subRoot)
{
    if(root == NULL)
    {
        return false;
    }
    if(isSameTree(root,subRoot))
    {
        return true;
    }
    return isSubtree(root->left,subRoot) || isSubtree(root->right,subRoot);
}
