class Solution {
public:
//利用映射的思路，多的对应字母重复数量就至少为2
//找到第一个为1的即可
    int firstUniqChar(string s) 
    {
        int coutsrt[26] = {0};
        //统计次数
        for(auto ch:s)
        {
            coutsrt[ch - 'a']++;
        }
        //打印第一个
        for(int i = 0;i<s.size();i++)
        {
            if(coutsrt[s[i] - 'a'] == 1)
            {
                return i;
            }
        }
        return -1;
    }
};
