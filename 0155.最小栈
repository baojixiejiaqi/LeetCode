class MinStack {
public:
    MinStack() {

    }
    //定义一个最小栈 和 栈
    //当入栈的元素 比最小栈小时候 再入最小栈

    void push(int val) 
    {
        _st.push(val);
        //最小栈不能为空 或者 入栈的值要比最小栈的值小
        if(_Minst.empty() || val <= _Minst.top())
        {
            _Minst.push(val);
        }
    }
    
    void pop()
    {
        if(_Minst.top() ==  _st.top())
        {
            _Minst.pop();
        }

        _st.pop();
    }
    
    int top() {
        return _st.top();
    }
    
    int getMin() {
        return _Minst.top();
    }
private:
    stack<int> _st;
    stack<int> _Minst;

};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
